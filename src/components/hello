import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Bar } from 'react-chartjs-2';

function Stu_Dashboard() {
  const [studentName, setStudentName] = useState('');
  const [attendanceData, setAttendanceData] = useState([]);

  useEffect(() => {
    // Fetch student name
    axios.get('http://localhost:5000/api/student/name')
      .then(response => {
        setStudentName(response.data.name);
      })
      .catch(error => {
        console.error('Error fetching student name:', error);
      });

    // Fetch attendance data
    axios.get('http://localhost:5000/api/student/attendance')
      .then(response => {
        setAttendanceData(response.data);
      })
      .catch(error => {
        console.error('Error fetching attendance data:', error);
      });
  }, []);

  // Calculate attendance percentage
  const totalEntries = attendanceData.length;
  const presentEntries = attendanceData.filter(entry => entry.status === 'present').length;
  const attendancePercentage = (presentEntries / totalEntries) * 100;

  // Chart data
  const data = {
    labels: ['Present', 'Absent'],
    datasets: [
      {
        label: 'Attendance Percentage',
        backgroundColor: ['#36A2EB', '#FF6384'],
        borderColor: 'rgba(255, 99, 132, 0.2)',
        borderWidth: 1,
        hoverBackgroundColor: ['#36A2EB', '#FF6384'],
        hoverBorderColor: 'rgba(255, 99, 132, 0.2)',
        data: [attendancePercentage, 100 - attendancePercentage],
      },
    ],
  };

  return (
    <div>
      <h1>Welcome, {studentName}</h1>
      <div>
        <h2>Attendance Summary</h2>
        <p>Total Entries: {totalEntries}</p>
        <p>Present Entries: {presentEntries}</p>
        <p>Absent Entries: {totalEntries - presentEntries}</p>
        <p>Attendance Percentage: {attendancePercentage}%</p>
        <div style={{ width: '50%', margin: 'auto' }}>
          <Bar
            data={data}
            width={100}
            height={50}
            options={{
              maintainAspectRatio: false,
              scales: {
                yAxes: [{
                  ticks: {
                    beginAtZero: true,
                  },
                }],
              },
            }}
          />
        </div>
      </div>
    </div>
  );
}

export default Stu_Dashboard;
